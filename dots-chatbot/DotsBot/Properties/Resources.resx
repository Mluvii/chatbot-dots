<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="RootDialog_Checkout_Cancel" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="HelpDialog_Prompt" xml:space="preserve">
    <value>Looks like you're stuck. Select one of these options.</value>
  </data>
  <data name="HelpDialog_start_over" xml:space="preserve">
    <value>Start over</value>
  </data>
  <data name="HelpDialog_connect_operator" xml:space="preserve">
    <value>Talk to a person</value>
  </data>
  <data name="HelpDialog_end" xml:space="preserve">
    <value>End</value>
  </data>
  <data name="CancellableDialog_back" xml:space="preserve">
    <value>Back</value>
  </data>
  <data name="WelcomeMessage_prompt" xml:space="preserve">
    <value>{0}, would you like to sign a credit agreement for {1} with the help of our call center operator or with me - the Virtual Assistant?</value>
  </data>
  <data name="WelcomeMessage_operator" xml:space="preserve">
    <value>Operator</value>
  </data>
  <data name="MluviiDialog_instalments_prompt" xml:space="preserve">
    <value>In how many installments would you like to divide the amount? Choose one of the options below (2 to 24).</value>
  </data>
  <data name="MluviiDialog_product_offer_title" xml:space="preserve">
    <value>Credit agreement nr. {0}</value>
  </data>
  <data name="MluviiDialog_product_offer_subTitle" xml:space="preserve">
    <value>Interest rate: {0}</value>
  </data>
  <data name="MluviiDialog_product_offer" xml:space="preserve">
    <value>We are offering you credit for product {0} of a total value of {1}, divided into {2} monthly installments of {3} and interest rate of {4}%.</value>
  </data>
  <data name="MluviiDialog_product_offer_choice_sign_online" xml:space="preserve">
    <value>Digitally sign</value>
  </data>
  <data name="MluviiDialog_product_offer_choice_not_tincans" xml:space="preserve">
    <value>Sign with call center operator</value>
  </data>
  <data name="MluviiDialog_operator_failed" xml:space="preserve">
    <value>Unfortunately I could not connect you with the operator. Would you like to start over?</value>
  </data>
  <data name="MluviiDialog_product_offer_your_signature_here" xml:space="preserve">
    <value>Sign please (name surname)</value>
  </data>
  <data name="MluviiDialog_product_offer_your_signature_here_retry" xml:space="preserve">
    <value>Unfortunately the provided details do not match. Please sign in the following format: Name Surname</value>
  </data>
  <data name="MluviiDialog_product_offer_signed" xml:space="preserve">
    <value>Thank you, the contract is on its way to your mailbox {0}. Product {1} can be picked up at AlzaBox 1561 / 4a Vyskočilova Street (Microsoft Building).</value>
  </data>
  <data name="MluviiDialog_product_offer_sign_failed" xml:space="preserve">
    <value>Unfortunately, the provided details are incorrect. I will connect you with a person now</value>
  </data>
  <data name="MluviiDialog_virtual_assistant" xml:space="preserve">
    <value>Virtual Assistant</value>
  </data>
  <data name="OperatorSelection_none_availible" xml:space="preserve">
    <value>We are sorry, it seems no operators are available at the moment.</value>
  </data>
  <data name="goodbye" xml:space="preserve">
    <value>Goodbye</value>
  </data>
  <data name="OperatorConnect_wait" xml:space="preserve">
    <value>You are being connected to {0}. Please standby.</value>
  </data>
  <data name="MluviiDialog_person_form_cancelled" xml:space="preserve">
    <value>Pokud si nepřejete nyní zadávat své údaje, můžu Vás místo toho spojit s operátorem.</value>
  </data>
  <data name="MluviiDialog_wait_checking_available_operators" xml:space="preserve">
    <value>OK, please wait while I check for an available operator</value>
  </data>
  <data name="RetryText" xml:space="preserve">
    <value>I didnt' undestant. Please try again.</value>
  </data>
  <data name="CrmQueryFailed" xml:space="preserve">
    <value>You do not seem to have any pending orders</value>
  </data>
  <data name="and" xml:space="preserve">
    <value>and</value>
  </data>
  <data name="OperatorConnect_available_list" xml:space="preserve">
    <value>These operators are available: {0}</value>
  </data>
  <data name="OperatorConnect_select_operator" xml:space="preserve">
    <value>Who would you like to talk to?</value>
  </data>
  <data name="OperatorConnect_still_looking" xml:space="preserve">
    <value>Still looking for available operators</value>
  </data>
</root>